<?php
/**
 *  Copyright 2011 Wordnik, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 */
class BanckleApi {

	function __construct($apiClient) {
	  $this->apiClient = $apiClient;
	}

  /**
	 * postbancklechatofflineMessage
	 * Attach chat offline message
   * body, string: CRM agent's email address (required)
   * body, string: The off-line message to save (required)
   * body, string: Chat visitor identifier (required)
   * body, string: Chat visitor email address (optional)
   * body, string: Chat visitor first name (optional)
   * body, string: Chat visitor last name (optional)
   * @return BanckleResponse
	 */

   public function postbancklechatofflineMessage($body, $body, $body, $body=null, $body=null, $body=null) {

  		//parse inputs
  		$resourcePath = "/banckle/chat/offlineMessage";
  		$resourcePath = str_replace("{format}", "json", $resourcePath);
  		$method = "POST";
      $queryParams = array();
      $headerParams = array();

      //make the API Call
      if (! isset($body)) {
        $body = null;
      }
  		$response = $this->apiClient->callAPI($resourcePath, $method,
  		                                      $queryParams, $body,
  		                                      $headerParams);


      if(! $response){
          return null;
        }

  		$responseObject = $this->apiClient->deserialize($response,
  		                                                'BanckleResponse');
  		return $responseObject;

      }
  /**
	 * postbancklechattranscript
	 * Attach chat transcript link
   * body, string: CRM agent's email address (required)
   * body, string: Chat transcript permanent link (required)
   * body, string: Chat visitor identifier (required)
   * body, string: Chat visitor email address (optional)
   * body, string: Chat visitor first name (optional)
   * body, string: Chat visitor last name (optional)
   * @return BanckleResponse
	 */

   public function postbancklechattranscript($body, $body, $body, $body=null, $body=null, $body=null) {

  		//parse inputs
  		$resourcePath = "/banckle/chat/transcript";
  		$resourcePath = str_replace("{format}", "json", $resourcePath);
  		$method = "POST";
      $queryParams = array();
      $headerParams = array();

      //make the API Call
      if (! isset($body)) {
        $body = null;
      }
  		$response = $this->apiClient->callAPI($resourcePath, $method,
  		                                      $queryParams, $body,
  		                                      $headerParams);


      if(! $response){
          return null;
        }

  		$responseObject = $this->apiClient->deserialize($response,
  		                                                'BanckleResponse');
  		return $responseObject;

      }
  /**
	 * getbanckleusersemail
	 * Gets user by email address
   * email, string: CRM agent's email address (required)
   * @return banckleResponse
	 */

   public function getbanckleusersemail($email) {

  		//parse inputs
  		$resourcePath = "/banckle/users/{email}";
  		$resourcePath = str_replace("{format}", "json", $resourcePath);
  		$method = "GET";
      $queryParams = array();
      $headerParams = array();

      if($email != null) {
  			$resourcePath = str_replace("{" . "email" . "}",
  			                            $this->apiClient->toPathValue($email), $resourcePath);
  		}
  		//make the API Call
      if (! isset($body)) {
        $body = null;
      }
  		$response = $this->apiClient->callAPI($resourcePath, $method,
  		                                      $queryParams, $body,
  		                                      $headerParams);


      if(! $response){
          return null;
        }

  		$responseObject = $this->apiClient->deserialize($response,
  		                                                'banckleResponse');
  		return $responseObject;

      }
  
}

